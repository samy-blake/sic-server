generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/generated"
  runtime  = "deno"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Auth {
  id        Int       @id @default(autoincrement())
  username  String    @unique
  password  String
  lastLogin DateTime?
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @updatedAt @db.Timestamp(6)
}

model Playlist {
  id              String  @id
  name            String
  genre           String
  createUpdateLog Boolean @default(true)
  image           String
  url             String  @db.LongText

  songs SongInPlaylist[]

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  UpdateLog UpdateLog[]
}

model SongInPlaylist {
  songId     String
  song       Song     @relation(fields: [songId], references: [id])
  playlistId String
  addedAt    String
  Playlist   Playlist @relation(fields: [playlistId], references: [id])

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  @@id([songId, playlistId])
}

model Song {
  id        String           @id
  artists   String
  name      String
  image     String
  playlists SongInPlaylist[]

  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)

  UpdateLog UpdateLog[]
}

model UpdateLog {
  id              Int          @id @default(autoincrement())
  songId          String?
  song            Song?        @relation(fields: [songId], references: [id])
  playlistId      String
  playlist        Playlist     @relation(fields: [playlistId], references: [id])
  type            UpdateLogTyp
  alternativeSong String?      @db.LongText
  createdAt       DateTime     @default(now()) @db.Timestamp(6)
}

enum UpdateLogTyp {
  CREATE
  UPDATE
  DELETE
}
